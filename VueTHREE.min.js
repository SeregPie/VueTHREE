(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?module.exports=b(require('vue'),require('three')):'function'==typeof define&&define.amd?define(['vue','three'],b):a.VueTHREE=b(a.Vue,a.THREE)})(this,function(a,b){'use strict';a=a&&a.hasOwnProperty('default')?a['default']:a,b=b&&b.hasOwnProperty('default')?b['default']:b;var c=function(){},d={name:'VueThreeRenderer',render(a){return a('div',{style:{width:'100%',height:'100%',overflow:'hidden'}},this.$slots.default)},props:{antialias:{type:Boolean,default:!0},alpha:{type:Boolean,default:!1},renderSceneInterval:{type:Number,default:1e3/60},updateContainerSizeInterval:{type:Number,default:1e3}},data(){return{containerWidth:0,containerHeight:0,frozen$renderer:Object.freeze({o:new b.WebGLRenderer({alpha:this.alpha,antialias:this.alpha})}),frozen$scene:{o:null},frozen$camera:{o:null}}},beforeCreate(){Object.entries({updateRendererSize(){this.renderer.setSize(this.containerWidth,this.containerHeight),0<this.containerWidth&&0<this.containerHeight&&this.camera&&(this.camera.aspect=this.containerWidth/this.containerHeight,this.camera.updateProjectionMatrix())}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},mounted(){this.$el.appendChild(this.renderer.domElement),this.updateContainerSizeScheduler(),this.renderSceneScheduler()},computed:{renderer(){return this.frozen$renderer.o},scene:{get(){return this.frozen$scene.o},set(a){return this.frozen$scene=Object.freeze({o:a})}},camera:{get(){return this.frozen$camera.o},set(a){return this.frozen$camera=Object.freeze({o:a})}},updateContainerSizeScheduler(){return function(){this._isDestroyed||(setTimeout(()=>{requestAnimationFrame(()=>{this.updateContainerSizeScheduler()})},this.updateContainerSizeInterval),this.updateContainerSize())}},renderSceneScheduler(){return function(){this._isDestroyed||(setTimeout(()=>{requestAnimationFrame(()=>{this.renderSceneScheduler()})},this.renderSceneInterval),this.renderScene())}}},watch:{},methods:{updateContainerSize(){let{width:a,height:b}=this.$el.getBoundingClientRect();this.containerWidth=a,this.containerHeight=b},renderScene(){this.scene&&this.camera&&this.renderer.render(this.scene,this.camera)}}},e={name:'VueThreeObject',render(a){return a('div',this.$slots.default)},props:{position:{type:[Object,Array],default(){return[0,0,0]}},scale:{type:[Object,Array,Number],default:1}},THREE:{object(){return new b.Object3D}},data(){return{containerWidth:0,containerHeight:0,frozen$object:Object.freeze({o:this.$options.THREE.object.call(this)})}},beforeCreate(){Object.entries({updatePosition(){Array.isArray(this.position)?this.object.position.fromArray(this.position):Object.assign(this.object.position,this.position)},updateScale(){Array.isArray(this.scale)?this.object.scale.fromArray(this.scale):Number.isFinite(this.scale)?this.object.scale.setScalar(this.scale):Object.assign(this.object.scale,this.scale)}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},mounted(){this.$parent.object.add(this.object)},beforeDestroy(){this.$parent.object.remove(this.object)},computed:{object(){return this.frozen$object.o},renderer(){return this.$parent.renderer}},watch:{}},f={name:'VueThreeScene',render(a){return a('div',this.$slots.default)},data(){return{containerWidth:0,containerHeight:0,frozen$object:Object.freeze({o:new b.Scene})}},created(){this.$parent.scene=this.object},computed:{object(){return this.frozen$object.o},renderer(){return this.$parent.renderer}}},g={name:'VueThreeFog',render(a){return a('div')},props:{color:{type:[Number,String],default:0},near:{type:Number,default:1},far:{type:Number,default:1e3}},data(){return{containerWidth:0,containerHeight:0,frozen$fog:Object.freeze({o:new b.Fog})}},mounted(){this.$parent.object.fog=this.fog},beforeCreate(){Object.entries({updateColor(){this.fog.color.set(this.color)},updateNear(){this.fog.near=this.near},updateFar(){this.fog.far=this.far}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},beforeDestroy(){this.$parent.object.fog=null},computed:{fog(){return this.frozen$fog.o}},watch:{}},h={name:'VueThreePerspectiveCamera',mixins:[e],render:e.render,props:{fov:{type:Number,default:50},near:{type:Number,default:1/10},far:{type:Number,default:2e3}},THREE:{object(){return new b.PerspectiveCamera}},beforeCreate(){Object.entries({updateFov(){this.object.fov=this.fov},updateNear(){this.object.near=this.near},updateFar(){this.object.far=this.far}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},created(){this.$parent.$parent.camera=this.object},computed:{},watch:{}},i={name:'VueThreeOrbitControls',render(a){return a('div')},props:{enabled:{type:Boolean,default:!0},minDistance:{type:Number,default:0},maxDistance:{type:Number,default:Infinity},minZoom:{type:Number,default:0},maxZoom:{type:Number,default:Infinity},minPolarAngle:{type:Number,default:0},maxPolarAngle:{type:Number,default:Math.PI},minAzimuthAngle:{type:Number,default:-Infinity},maxAzimuthAngle:{type:Number,default:Infinity},enableDamping:{type:Boolean,default:!1},dampingFactor:{type:Number,default:0.25},enableZoom:{type:Boolean,default:!0},zoomSpeed:{type:Number,default:1},enableRotate:{type:Boolean,default:!0},rotateSpeed:{type:Number,default:1},enablePan:{type:Boolean,default:!0},keyPanSpeed:{type:Number,default:7},autoRotate:{type:Boolean,default:!1},autoRotateSpeed:{type:Number,default:2},enableKeys:{type:Boolean,default:!0},updateControlsInterval:{type:Number,default:1e3/60}},data(){let a=this.$parent.object,c=this.$parent.renderer;return{frozen$controls:Object.freeze({o:new b.OrbitControls(a,c.domElement)})}},beforeCreate(){Object.entries({updateEnabled(){this.controls.enabled=this.enabled},updateMinDistance(){this.controls.minDistance=this.minDistance},updateMaxDistance(){this.controls.maxDistance=this.maxDistance},updateMinZoom(){this.controls.minZoom=this.minZoom},updateMaxZoom(){this.controls.maxZoom=this.maxZoom},updateMinPolarAngle(){this.controls.minPolarAngle=this.minPolarAngle},updateMaxPolarAngle(){this.controls.maxPolarAngle=this.maxPolarAngle},updateMinAzimuthAngle(){this.controls.minAzimuthAngle=this.minAzimuthAngle},updateMaxAzimuthAngle(){this.controls.maxAzimuthAngle=this.maxAzimuthAngle},updateEnableDamping(){this.controls.enableDamping=this.enableDamping},updateDampingFactor(){this.controls.dampingFactor=this.dampingFactor},updateEnableZoom(){this.controls.enableZoom=this.enableZoom},updateZoomSpeed(){this.controls.zoomSpeed=this.zoomSpeed},updateEnableRotate(){this.controls.enableRotate=this.enableRotate},updateRotateSpeed(){this.controls.rotateSpeed=this.rotateSpeed},updateEnablePan(){this.controls.keyPanSpeed=this.keyPanSpeed},updateKeyPanSpeed(){this.controls.autoRotate=this.autoRotate},updateAutoRotate(){this.controls.autoRotateSpeed=this.autoRotateSpeed},updateAutoRotateSpeed(){this.controls.autoRotateSpeed=this.autoRotateSpeed},updateEnableKeys(){this.controls.enableKeys=this.enableKeys}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},mounted(){this.updateControlsScheduler()},beforeDestroy(){this.controls.dispose()},computed:{controls(){return this.frozen$controls.o},updateControlsScheduler(){return function(){this._isDestroyed||(setTimeout(()=>{requestAnimationFrame(()=>{this.updateControlsScheduler()})},this.updateControlsInterval),this.updateControls())}}},watch:{},methods:{updateControls(){}}},j={name:'VueThreePointLight',mixins:[e],render:e.render,props:{color:{type:[Number,String],default:16777215},intensity:{type:Number,default:1},distance:{type:Number,default:0},decay:{type:Number,default:1}},THREE:{object(){return new b.PointLight}},beforeCreate(){Object.entries({updateColor(){this.object.color.set(this.color)},updateIntensity(){this.object.intensity=this.intensity},updateDistance(){this.object.distance=this.distance},updateDecay(){this.object.decay=this.decay}}).forEach(([a,b])=>{this.$options.computed[a]=b,this.$options.watch[a]=c})},computed:{},watch:{}};a.component(d.name,d),a.component(f.name,f),a.component(g.name,g),a.component(h.name,h),a.component(i.name,i),a.component(j.name,j);return{Renderer:d,Object3D:e,Scene:f,Fog:g,PerspectiveCamera:h,OrbitControls:i,PointLight:j}});
